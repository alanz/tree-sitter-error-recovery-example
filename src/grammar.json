{
  "name": "micro_erlang",
  "rules": {
    "source_file": {
      "type": "REPEAT",
      "content": {
        "type": "SYMBOL",
        "name": "form"
      }
    },
    "form": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "fun_recovery"
        },
        {
          "type": "SYMBOL",
          "name": "_newline"
        }
      ]
    },
    "name": {
      "type": "TOKEN",
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "TOKEN",
            "content": {
              "type": "PATTERN",
              "value": "[a-z]"
            }
          },
          {
            "type": "REPEAT",
            "content": {
              "type": "TOKEN",
              "content": {
                "type": "PATTERN",
                "value": "[a-z]"
              }
            }
          }
        ]
      }
    },
    "fun_recovery": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "fun"
        },
        {
          "type": "SYMBOL",
          "name": "catch_all"
        }
      ]
    },
    "fun": {
      "type": "SEQ",
      "members": [
        {
          "type": "FIELD",
          "name": "name",
          "content": {
            "type": "SYMBOL",
            "name": "name"
          }
        },
        {
          "type": "FIELD",
          "name": "args",
          "content": {
            "type": "SYMBOL",
            "name": "args"
          }
        },
        {
          "type": "FIELD",
          "name": "body",
          "content": {
            "type": "SYMBOL",
            "name": "clause_body"
          }
        },
        {
          "type": "STRING",
          "value": "."
        }
      ]
    },
    "args": {
      "type": "STRING",
      "value": "()"
    },
    "_expr": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "call"
        }
      ]
    },
    "call": {
      "type": "SEQ",
      "members": [
        {
          "type": "FIELD",
          "name": "fn",
          "content": {
            "type": "SYMBOL",
            "name": "name"
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": "("
          }
        },
        {
          "type": "TOKEN",
          "content": {
            "type": "STRING",
            "value": ")"
          }
        }
      ]
    },
    "clause_body": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "->"
        },
        {
          "type": "SYMBOL",
          "name": "_expr"
        }
      ]
    },
    "catch_all": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "any_tok"
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SYMBOL",
            "name": "any_tok"
          }
        }
      ]
    },
    "any_tok": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "name"
        },
        {
          "type": "SYMBOL",
          "name": "args"
        },
        {
          "type": "STRING",
          "value": "->"
        },
        {
          "type": "STRING",
          "value": "("
        },
        {
          "type": "STRING",
          "value": ")"
        }
      ]
    }
  },
  "extras": [
    {
      "type": "PATTERN",
      "value": "\\s"
    }
  ],
  "conflicts": [
    [
      "fun",
      "any_tok"
    ]
  ],
  "precedences": [

  ],
  "externals": [
    {
      "type": "SYMBOL",
      "name": "_newline"
    },
    {
      "type": "SYMBOL",
      "name": "_indent"
    },
    {
      "type": "SYMBOL",
      "name": "_dedent"
    },
    {
      "type": "SYMBOL",
      "name": "_string_start"
    },
    {
      "type": "SYMBOL",
      "name": "_string_content"
    },
    {
      "type": "SYMBOL",
      "name": "_string_end"
    },
    {
      "type": "SYMBOL",
      "name": "comment"
    },
    {
      "type": "STRING",
      "value": "]"
    },
    {
      "type": "STRING",
      "value": ")"
    },
    {
      "type": "STRING",
      "value": "}"
    }
  ],
  "inline": [

  ],
  "supertypes": [

  ],
  "@generated": true
}